{{from plugin_widgets import MODAL}}
{{
print 'in view, classid =', classid
submit_args = {'_type': 'submit',
               '_value': 'Add',
               '_data-dismiss': 'modal',
               '_class': 'btn btn-success pull-right'}
cancel_args = {'_aria-hidden': 'true',
               '_data-dismiss': 'modal',
               '_type': 'button',
               '_class': 'btn pull-right'}
ftr = CAT(INPUT(**submit_args),
          BUTTON('Cancel', **cancel_args))
modal = MODAL('Add members', 'Add new members to this class',
               LOAD('listing', 'add_user_form.load',
                    vars={'classid': classid}, ajax=True),
               id='add_members',
               footer=ftr,
               trigger_classes='btn-success btn pull-right')
}}
{{=modal[0]}}
{{
if in_process:
    set_title = 'Current Set'
else:
    set_title = 'Set at course end'
pass
tbl = TABLE(TR(TH(_class='username'),
               TH(_class=''),
               TH(_class=''),
               TH(_class=''),
               TH(_class=''),
               TH(_class=''),
               TH(_class=''),
               TH(_class=''),
               TH('This Week', _colspan='2', _class='week-counts-0 center'),
               TH('Last Week', _colspan='2', _class='week-counts-2 center'),
               TH(_class='')
               ),
            TR(TH('Name', _class='username'),
               TH(set_title, _class='rank'),
               TH('Set at course start', _class='start-rank'),
               TH('Term Progress', _class='term-prog'),
               TH('Current Grade', _class='grade'),
               TH('Course Start', _class='course_start'),
               TH('Course End', _class='course_end'),
               TH('Previous Course End', _class='prev_end'),
               TH('Days Active', _class='week-counts-0'),
               TH('Days > {}'.format(target), _class='week-counts-1'),
               TH('Days Active', _class='week-counts-2'),
               TH('Days > {}'.format(target), _class='week-counts-3'),
               TH()
               ),
            _class='table table-condensed users_list_table')

for infodict in userlist:
    row = TR(TD(A(infodict['name'], _href=URL('reporting', 'user.html',
                                              args=[infodict['uid']])),
                _class='username'
                ),
             TD(infodict['current_set'], _class='rank'),
             TD(infodict['starting_set'], _class='start-rank'),
             TD(infodict['progress'], _class='term-prog'),
             TD(infodict['grade'], _class='grade'),
             TD(infodict['start_date'], _class='course-start'),
             TD(infodict['end_date'], _class='course-end'),
             TD(infodict['previous_end_date'], _class='prev-end'),
             )
    if infodict['counts']:
        for n in range(4):
            num = infodict['counts'][n]
            if num < freq:
                row['_class'] = 'error'
                row.append(TD(num, _class='week-counts-{} error'.format(n)))
            else:
                row.append(TD(num, _class='week-counts-{}'.format(n)))
            pass
        pass
    else:
        for n in range(4):
            row.append(TD(_class='week-counts-{}'.format(n)))
        pass
    pass
    row.append(CAT(TD(DIV(A(I(_class='fa fa-trash'),
                            _class='btn btn-danger',
                            _href=URL('listing', 'remove_user',
                                      vars={'uid': infodict['uid'], 'classid': classid}),
                            cid=request.cid),
                          A(I(_class='fa fa-angle-left'),
                            _class='btn btn-warning',
                            _href=URL('listing', 'demote_user',
                                      vars={'uid': infodict['uid'], 'classid': classid,
                                            'rec': infodict['tp_id']}),
                            cid=request.cid),
                          A(I(_class='fa fa-angle-right'),
                            _class='btn btn-success',
                            _href=URL('listing', 'promote_user',
                                      vars={'uid': infodict['uid'],
                                            'classid': classid,
                                            'rec': infodict['tp_id']}),
                            ),
                          _class='btn-group',
                          _role='group'),
                        _class='button_column'
                        )
                    )
                )
tbl.append(row)
pass
}}
{{=tbl}}
{{=modal[1]}}

<script type="text/javascript">

try{
	while(true){
		if(typeof(userlist_cid) == undefined){break;}
   		if (! userlist_cid){
			userlist_cid = '{{=request.cid}}';
		}
	break;
	}
}
catch(e){console.log('userlist_cid is not ready yet');}
</script>


