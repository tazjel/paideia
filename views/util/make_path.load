{{=form.custom.begin}}
    {{tbl = TABLE()
    tbl.append(CAT(TR(TD(LABEL('label_template')),
                         TD(form.custom.widget.label_template),
                         TD('{words1}, {words2}, etc. for substitution fields')
                      ),
                   TR(TD(LABEL('word sets')),
                      TD(form.custom.widget.words),
                      TD('Each line contains alternatives for the same '
                         'substitution field. Separate alternatives with |')
                      ),
                   TR(TD(LABEL('aligned')),
                      TD(form.custom.widget.aligned),
                      TD()
                      ),
                   TR(TD(LABEL('avoid')),
                      TD(form.custom.widget.avoid),
                      TD('Combinations of the above word sets that should not be '
                         'used in creating a step. Each row should be a single '
                         'word combination as a tuple (worda, wordb, wordc).',)
                      ),
                   TR(TD(LABEL('testing')),
                      TD(form.custom.widget.testing),
                      TD()
                      )
                  )
                )
    for n in range(1,6):
        nums = ['zero', 'one', 'two', 'three', 'four', 'five']
        tbl.append(TR(TD(LABEL('step {}'.format(n), _for='fs{}_toggle'.format(n)),
                         INPUT(_id='fs{}_toggle'.format(n),
                               _type='checkbox',
                               _class='form_hider',
                               _name='fs{}'.format(n),
                               _value='fs{}'.format(n)),
                         DIV(TABLE(TR(TD(LABEL('prompt_template')),
                                      TD(form.custom.widget['{}_prompt_template'.format(nums[n])]),
                                      TD('Basic substitution fields are {wordsN}. '
                                          'For contextual parsing, use the format '
                                          '{lemma-modform-constraint} where "lemma" '
                                          'can be a substitution word (like "words2")'
                                          'or a Greek lemma. Constraints are '
                                          'formatted like "case@nom" and separated by an underscore: "case@nom_g@f".')
                                       ),
                                   TR(TD(LABEL('response_template')),
                                      TD(form.custom.widget['{}_response_template'.format(nums[n])]),
                                      TD('Here substitution fields are still marked by '
                                          'single brackets {words1}')
                                      ),
                                   TR(TD(LABEL('readable_template')),
                                      TD(form.custom.widget['{}_readable_template'.format(nums[n])]),
                                      TD()
                                      ),
                                   TR(TD(LABEL('tags')),
                                      TD(form.custom.widget['{}_tags'.format(nums[n])]),
                                      TD()
                                      ),
                                   TR(TD(LABEL('tags_secondary')),
                                      TD(form.custom.widget['{}_tags_secondary'.format(nums[n])]),
                                      TD()
                                      ),
                                   TR(TD(LABEL('tags_ahead')),
                                      TD(form.custom.widget['{}_tags_ahead'.format(nums[n])]),
                                      TD()
                                      ),
                                   TR(TD(LABEL('npcs')),
                                      TD(form.custom.widget['{}_npcs'.format(nums[n])]),
                                      TD()
                                      ),
                                   TR(TD(LABEL('locations')),
                                      TD(form.custom.widget['{}_locations'.format(nums[n])]),
                                      TD()
                                      ),
                                   TR(TD(LABEL('step_type')),
                                      TD(form.custom.widget['{}_step_type'.format(nums[n])]),
                                      TD()
                                      ),
                                   TR(TD(LABEL('instructions')),
                                      TD(form.custom.widget['{}_instructions'.format(nums[n])]),
                                      TD()
                                      ),
                                   TR(TD(LABEL('hints')),
                                      TD(form.custom.widget['{}_hints'.format(nums[n])]),
                                      TD()
                                      ),
                                   TR(TD(LABEL('image_template')),
                                      TD(form.custom.widget['{}_image_template'.format(nums[n])]),
                                      TD()
                                      ),
                                   ),  # table close
                            _id='fs{}'.format(n),
                            _class='stepdiv'),  # div close
                         _colspan='3')  # parent cell close
                      )  # parent row close
                    )  # append close
    }}
    {{pass}}
    {{tbl.append(TR(TD(INPUT(_type='submit', _value='submit form'))))}}
    {{=tbl}}
{{=form.custom.end}}
{{=message}}
{{=output}}

<script>
jQuery(document).ready(function($){
    $('.stepdiv').each(function(){$(this).css({'display': 'none'})});
    $('.form_hider').each(function(){$(this).css({'display': 'none'})});
    $('input[type="checkbox"].form_hider').on('change', function(event) {
        theid = $(this).val();
        $('#' + theid).toggle();
    });
});
</script>
