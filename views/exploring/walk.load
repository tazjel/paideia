{{from plugin_widgets import TOOLTIP, ROLE, POPOVER}}

<div id='loading-mask'>
    <img src={{=URL('static', 'images/ajax-loader.gif')}}
        style="margin:40%;" alt='loading' />
</div>

{{ap = DIV(H3('Admin Panel'), _class='admin-panel')
ap.append(form) }}
{{=ROLE(ap)}}

{{# ======================================================================
# MAP INTERFACE ========================================================
# ======================================================================

if request.args(0) == 'map' or not request.args:}}
	<embed id='town_map' src='{{=map["map_image"]}}' type='image/svg+xml' />
{{# ======================================================================
# STEP INTERFACE========================================================
# ======================================================================
else:
    # ======================================================================
    # PROMPT / REPLY =======================================================
    # ======================================================================
    # npc image on left =================================================}}
    {{=DIV(npc_image, _class='speaker')}}

    {{# prompt/reply div=================================================}}
    <div class='npc prompt'>
        <p class='prompt-text'>{{=prompt_text}}</p>
        {{if 'readable_long' in globals():
            rdbl = UL(_class='readable_long')
            for r in readable_long:
                rdbl.append(LI(r))
            pass
            readable_long_args = {'classnames': 'btn btn-info',
                                  'id': 'readable_btn'}
            xamples = POPOVER().widget('More examples',
                                       rdbl,
                                       **readable_long_args)}}
            {{=xamples}}
        {{pass}}
        {{# audio for prompt===============================================
        if audio:}}
            <audio controls="true" autoplay="true" id="{{=audio['title']}}"
                class="prompt_audio">
                "Sorry, your browser doesn\'t support the audio element"
                <source src="{{=URL('default', 'download',
                                    args=[audio['mp3']])}}" type='audio/mp3' />
                {{if audio_ogg:}}
                    <source src="{{=URL('default', 'download',
                                        args=['ogg'])}}" type='audio/ogg' />
                {{pass}}
            </audio>
        {{pass}}

        {{# image for prompt===============================================
        if widget_img:
            img = IMG(_src=URL('static/images/', widget_img['file']),
                        _title=widget_img['title'],
                        _alt=widget_img['description'],
                        _class='widget-image')}}
            {{=img}}
        {{pass}}
        {{# hints popup for reply===========================================
        if 'hints' in globals() and hints:
            hint_list = UL()
            for h in hints:
                hint_list.append(LI(h))
            pass
            hints_args = {'classnames': 'btn btn-info',
                          'id': 'instructions_btn'}
            hinter = POPOVER().widget('Hints', hint_list, **hints_args)}}
            {{=hinter}}
        {{pass}}
        {{# instructions popup for prompt/reply=============================
        if 'instructions' in globals() and instructions:
            ilist = UL(_class='prompt_instructions')
            for itext in instructions:
                ilist.append(LI(itext))
            pass
            i_args = {'classnames': 'btn btn-info instructions-popover',
                      'title': 'Instructions for this step',
                      'id': 'instructions_btn'}
            i_pop = POPOVER().widget('Instructions', ilist, **i_args)}}
            {{=i_pop}}
        {{pass}}

        {{# slides popup for prompt/reply===================================
        if 'slidedecks' in globals() and slidedecks:
            decklist = UL(_class='prompt_slides')
            for did, dname in slidedecks.iteritems():
                decklist.append(LI(A(dname, _href=URL('listing', 'slides.html',
                                     args=[did]))))
            pass
            slides_args = {'classnames': 'btn btn-info slides-popover',
                           'title': 'Relevant slide decks',
                           'id': 'Slides_btn'}
            s_pop = POPOVER().widget('slides', decklist, **slides_args)}}
            {{=s_pop}}
        {{pass }}

        {{# path counter for prompt/reply==================================}}
        <span class='path-counter progress_text'>
            'This will make {{=completed_count + 1}} paths so far today.'
        </span>
    </div>

    {{# responder div ========================================================}}
    <div class='responder'>
        {{if 'response_form' in locals() and response_form:}}
            {{=response_form}}
        {{pass

        if sid and pid:
            stepedit = A('step {}'.format(sid),
                        _href=URL('editing', 'listing', args=['steps', sid]),
                        _class='prompt-s-editlink'
                        )
            pathedit = A('path {}'.format(pid),
                        _href=URL('editing', 'listing', args=['paths', pid]),
                        _class='prompt-p-editlink'
                        )
            catnum = ' choosing from category {}'.format(category)}}
            {{=ROLE(SPAN(pathedit, ', ', stepedit, catnum,
                    _class='prompt-editlinks'))}}
        {{pass

        if 'continue' in response_buttons:}}
            {{=A("Continue", _href=URL('walk', args=['ask'], vars={'loc': loc}),
            cid='page', _class='continue btn btn-success next_q')}}
        {{pass}}

        {{if 'retry' in response_buttons:}}
            {{=A("Try again", _href=URL('walk', args=['repeat'], vars={'loc': loc}),
                 cid='page', _class='btn btn-warning retry')}}
        {{pass}}

        {{if 'map' in response_buttons:}}
            {{=A("Back to map", _href=URL('walk', args=['map'], vars={'loc': None}),
                 cid='page', _class='btn btn-success icon-map-marker back_to_map')}}
        {{pass}}

        {{if bugreporter in globals() and bugreporter:}}
            {{=bmodal}}
        {{pass}}
    </div>
{{pass}}

<script>
    {{if 'bg_image' in globals():}}
        $('#page').css("background-image", "url({{=bg_image}})");
        $('#page').css("background-size", "auto 100%");
    {{pass}}

    $('.popover-trigger').each(function() {
        var $this = $(this);
        $this.popover({html: true,
                    animation: true,
                    content: $this.find('.popover-content').html()
        });
    });

    $('#responder submit').click(function(event){
        window.parent.web2py_component("/paideia/exploring/walk.load/reply","page");
        event.preventDefault();
    });
</script>
