{{# vim:set filetype=html.web2py.htmlweb2py: }}
{{if request.is_local:}}
    {{#=response.toolbar()}}
{{pass}}

<div id='utils'>
<form style='z-index:99' id='clear_session'>
    <ul>
        <li>
            <input type='text' value='all' name='session_var' id='session_var' />
            <a id='session_clear' href='#'>Clear session</a> 
        </li>
    </ul>
</form>
<ul>
    {{for k,v in session.walk.iteritems():}}
        <li>{{=k}}: {{=v}}</li>
    {{pass}}
</ul>
<form>
    <ul>
        <li>
            <input type='text' value='all' name='test_step' id='test_step' />
            <a id='test_this_step' href='#'>Test step</a> 
        </li>
    </ul>
</form>    
</div>

<!--when path completed-->
{{if request.args(0) == 'end':}}
    <section class="npc">
    <p>Well done. You've done enough for today, but you're welcome to continue 
    exploring you want.
    {{=A('Continue', _href=URL('walk.load'), cid='page')}}</p>
    </section>

<!--when an error is raised-->
{{elif request.args(0) == 'error':}}
    <section class='npc'>
        {{=message}}
        {{=button}}
    </section>

<!--path selection-->
{{elif request.args(0) == 'start' or not request.args:}}
	<embed id='town_map' src='{{=map.image}}' type='image/svg+xml' />
    
<!--present npc reply for user's response to step prompt-->
{{elif 'response' in request.vars:}}
    <div class='bg_image'>{{=bg_image}}</div>
    <div class='speaker'>{{=npc_img}}</div>
    <section class="npc prompt">
        <p>{{=reply}}</p>
        <p>Correct answers would include
            <ul class='readable_short'>
            {{for r in readable:}}
                {{=LI(r)}}
            {{pass}}
            </ul>
        </p>
        <span class="q_counter">Currently working on 
            {{=len(session.walk['active_paths'].keys())}} paths; 
            {{=len(session.walk['completed_paths'])}} 
        paths already complete today.</span>
    </section>
    <div class='responder'>
        {{=A("Continue", _href=URL('walk', args=['ask'],
                                    vars=dict(loc=request.vars['loc'])),
            cid='page', 
            _class='button-green-grad next_q')}}
            
        {{=A("Retry", _href=URL('walk', args=['retry'], 
                                    vars=dict(loc=request.vars.loc)), 
            cid='page', 
            _class='button-yellow-grad back_to_map')}}

        {{=A("Map", _href=URL('walk', args=['start'],
                                    vars=dict(loc=None)),
            cid='page', 
            _class='button-yellow-grad back_to_map')}}
        
        <a class="bug_reporter">
            <span class='icon-bug'>bug</span>
            {{=XML(bug_reporter)}} 
        </a> 
    </div>

<!--present prompt for step-->
{{elif not 'response' in request.vars:}}
    <div class='bg_image'>{{=bg_image}}</div>
    <div class='speaker'>{{=npc_img}}</div>
    <div class="npc prompt">{{=prompt}}</div>
    <div class='responder'>
        {{try:}}
            {{=responder}}
            <div class='prompt_tips'>
                <!--TODO: We need a different tips for different questions-->
                <!--TODO: Make guidelines a popup tooltip-->
                <p class="guidelines">Remember to only give <strong>one</strong> 
                    translation (not a list of different possibilities) and to give a <strong>translation</strong> (so not "keep" but "I keep").
                </p>
            </div>
        {{except:}}
        {{pass}}
        {{=A("This Map", _href=URL('walk'),
            cid='page', 
            _class='button-yellow-grad back_to_map')}}
    </div>
{{pass}}

<script>

$('#session_clear').click(function(event){
    ajax('clear_session', ['session_var'], ':eval');
    event.preventDefault();
});
$('#test_this_step').click(function(event){
    val = $(this).parent('li').find('#test_step').val()
    window.parent.web2py_component("/paideia/exploring/walk.load/test_step/" + val,"page");
    event.preventDefault();
});
$('#responder_submit').click(function(event){
    window.parent.web2py_component("/paideia/exploring/walk.load/reply","page"); 
    event.preventDefault();
});
</script>
